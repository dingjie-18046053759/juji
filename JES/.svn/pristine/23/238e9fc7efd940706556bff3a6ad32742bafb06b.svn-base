package com.fmcq.service.impl;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.net.ssl.HttpsURLConnection;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Service;

import sun.net.www.protocol.http.HttpURLConnection;

import com.fmcq.controller.LoginController;
import com.fmcq.entity.Users;
import com.fmcq.service.ILoginService;
import com.fmcq.service.IUsersService;
import com.fmcq.util.HibernateUtil;
import com.google.gson.Gson;

@Service
public class LoginServiceImpl implements ILoginService {
	private static Log log = LogFactory.getLog(LoginController.class);
	
	@Resource
	private HibernateUtil util;
	@Resource
	private IUsersService usersService;
	
	/**
	 * 登录
	 */
	@Override
	public Map<String, Object> login(String account, String pass){
		log.info("login start");
		String sql = "select id,name from users where account = '"+account+"' and pass = '"+pass+"'";
		Object[] obj = this.util.queryBySQL(sql);
		
		Map<String, Object> map = new HashMap<String, Object>();
		
		if(obj != null && obj[0] != null && !"".equals(String.valueOf(obj[0]))){
			Users users = this.util.get(Users.class, Integer.valueOf(String.valueOf(obj[0])));
			map.put("code", "0");
			map.put("msg", "登录成功！");
			map.put("users", users);
		}else{
			map.put("code", "1");
			map.put("msg", "验证码错误！");
		}
		return map;
	}
	
	/**
	 * 获取验证码
	 * @param tel
	 * @return
	 * @throws Exception
	 */
	@Override
	public String upYzm(String tel) throws Exception{
		log.info("findYzm start");
		log.info("电话" + tel);
		Users users = this.usersService.findUsersByPhone(tel);
		Map<String, Object> map = new HashMap<String, Object>();
		if(users == null){
			map.put("code", "1");
			map.put("msg", "手机号码不存在。");
		}else{
			int number = (int) (Math.random() * 9000 + 1000);
			log.info(tel + "的验证码：" + number);
			users.setPass(String.valueOf(number));
			this.util.update(users);

			log.info("网关一发送完毕");
			String postUrl = "http://115.29.163.130:8180/service.asmx/SendMessageStr";
			String postData = "Id=350&Name=fjkangda&Psw=221591&Message=炬集物联-您的验证码是"+number+"。如非本人操作，请忽略本短信&Phone=" + tel + "&Timestamp=0";
			URL url = new URL(postUrl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestProperty("Content-Type",
					"application/x-www-form-urlencoded");// 设置请求内容格式
			conn.setRequestProperty("Connection", "Keep-Alive");// ？
			conn.setUseCaches(false);// 关闭缓存
			conn.setDoOutput(true);// 输出
			conn.setRequestProperty("Connection-Length", "" + postUrl.length());// 请求内容长度
			OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream(),
					"utf-8");// 创建输出流
			out.write(postData);// 将请求内容写入输出流
			out.flush();// 清空输出流
			out.close();// 关闭输出流
			// 获取响应状态(是否为ok)
			if (conn.getResponseCode() != HttpsURLConnection.HTTP_OK) {
				log.info("=========================请求连接返回失败====================");
			}
			// 获取响应内容
			String line, result = "";
			BufferedReader in = new BufferedReader(new InputStreamReader(
					conn.getInputStream(), "utf-8"));// 创建缓存阅读器
			// 循环读取内容知道为空
			while ((line = in.readLine()) != null) {
				result += line + "\n";// 等于每行信息换行
			}
			in.close();// 关闭存储阅读器
			map.put("code", "0");
			map.put("msg", "获取验证码成功。");
		}
		Gson g = new Gson();
		String json = g.toJson(map);
		log.info("findYzm end");
		return json;
	}
	
}
